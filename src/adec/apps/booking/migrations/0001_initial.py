# -*- coding: utf-8 -*-
# Generated by Django 1.9b1 on 2015-11-16 02:28
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.ranges
import django.contrib.postgres.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.TimeField()),
                ('end', models.TimeField()),
                ('date', models.DateField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('slug', models.SlugField(unique=True)),
                ('email', models.EmailField(blank=True, max_length=120, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=120)),
                ('address', models.CharField(max_length=140)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Business')),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to=b'business/photos')),
                ('caption', models.CharField(max_length=140)),
            ],
        ),
        migrations.CreateModel(
            name='Professional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=120)),
                ('slug', models.SlugField(unique=True)),
                ('bio', models.TextField()),
                ('email', models.EmailField(blank=True, max_length=120, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=120)),
                ('instagram', models.CharField(blank=True, max_length=120, null=True)),
                ('facebook', models.CharField(blank=True, max_length=120, null=True)),
                ('twitter', models.CharField(blank=True, max_length=120, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('monday', django.contrib.postgres.fields.ranges.IntegerRangeField(blank=True, null=True, validators=[django.contrib.postgres.validators.RangeMinValueValidator(8), django.contrib.postgres.validators.RangeMaxValueValidator(20)])),
                ('tuesday', django.contrib.postgres.fields.ranges.IntegerRangeField(blank=True, null=True, validators=[django.contrib.postgres.validators.RangeMinValueValidator(8), django.contrib.postgres.validators.RangeMaxValueValidator(20)])),
                ('wednesday', django.contrib.postgres.fields.ranges.IntegerRangeField(blank=True, null=True, validators=[django.contrib.postgres.validators.RangeMinValueValidator(8), django.contrib.postgres.validators.RangeMaxValueValidator(20)])),
                ('thursday', django.contrib.postgres.fields.ranges.IntegerRangeField(blank=True, null=True, validators=[django.contrib.postgres.validators.RangeMinValueValidator(8), django.contrib.postgres.validators.RangeMaxValueValidator(20)])),
                ('friday', django.contrib.postgres.fields.ranges.IntegerRangeField(blank=True, null=True, validators=[django.contrib.postgres.validators.RangeMinValueValidator(8), django.contrib.postgres.validators.RangeMaxValueValidator(20)])),
                ('saturday', django.contrib.postgres.fields.ranges.IntegerRangeField(blank=True, null=True, validators=[django.contrib.postgres.validators.RangeMinValueValidator(8), django.contrib.postgres.validators.RangeMaxValueValidator(20)])),
                ('sunday', django.contrib.postgres.fields.ranges.IntegerRangeField(blank=True, null=True, validators=[django.contrib.postgres.validators.RangeMinValueValidator(8), django.contrib.postgres.validators.RangeMaxValueValidator(20)])),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Business')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140)),
                ('price', models.PositiveIntegerField()),
                ('other_charges', models.BooleanField(default=False, help_text=b'If the service could have other charges.')),
                ('minutes', models.PositiveSmallIntegerField(default=45, help_text='Expresed in minutes', verbose_name='length')),
                ('transition_time', models.PositiveSmallIntegerField(default=15, help_text='Transition time between appointments, expressed in minutes', verbose_name='Transition time')),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_services', to='booking.Category')),
                ('profesional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Professional')),
            ],
        ),
        migrations.AddField(
            model_name='photo',
            name='professional',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Professional'),
        ),
        migrations.AddField(
            model_name='booking',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Service'),
        ),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
